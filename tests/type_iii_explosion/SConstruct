import os

mode = ARGUMENTS.get('mode','gcc_release')

if mode=='gcc_release':
    compiler = 'g++'
    cflags = ' -Wfatal-errors -O3 '
elif mode=='clang_release':
    compiler = 'clang++'
    cflags = '-Weverything -Werror -ferror-limit=1 -Wno-error=padded -O3 '
else:
    raise NameError('unsupported mode')

build_dir = 'build/'+mode
env = Environment(ENV = os.environ,
                  CXX=compiler,
                  CPPPATH=['./source','../../source'],
                  LIBPATH=['../../'+build_dir,os.environ['HDF5_LIB_PATH']],
                  LIBS=['hdf5','hdf5_cpp','capricorn'],
                  CXXFLAGS=cflags)
env.VariantDir(build_dir,'source')
env.Program(build_dir+'/capricorn',
            Glob(build_dir+'/*.cpp'))
                  
